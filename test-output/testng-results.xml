<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="9" passed="7" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-09-19T13:17:05 IST" name="Suite" finished-at="2025-09-19T13:18:15 IST" duration-ms="70309">
    <groups>
      <group name="regression">
        <method signature="Account_registration_test.test_account_Registration()[pri:0, instance:testcases.Account_registration_test@3eb25e1a]" name="test_account_Registration" class="testcases.Account_registration_test"/>
        <method signature="Account_registration_test.test_account_Registration()[pri:0, instance:testcases.Account_registration_test@7dc0f706]" name="test_account_Registration" class="testcases.Account_registration_test"/>
      </group> <!-- regression -->
      <group name="master">
        <method signature="Account_registration_test.test_account_Registration()[pri:0, instance:testcases.Account_registration_test@3eb25e1a]" name="test_account_Registration" class="testcases.Account_registration_test"/>
        <method signature="Account_registration_test.test_account_Registration()[pri:0, instance:testcases.Account_registration_test@7dc0f706]" name="test_account_Registration" class="testcases.Account_registration_test"/>
      </group> <!-- master -->
    </groups>
    <test started-at="2025-09-19T13:17:05 IST" name="Linux-Chrome" finished-at="2025-09-19T13:17:21 IST" duration-ms="15809">
      <class name="testcases.Account_registration_test">
        <test-method is-config="true" signature="setup(java.lang.String,java.lang.String)[pri:0, instance:testcases.Account_registration_test@3eb25e1a]" started-at="2025-09-19T13:17:06 IST" name="setup" finished-at="2025-09-19T13:17:10 IST" duration-ms="4748" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Linux]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="test_account_Registration()[pri:0, instance:testcases.Account_registration_test@3eb25e1a]" started-at="2025-09-19T13:17:10 IST" name="test_account_Registration" finished-at="2025-09-19T13:17:16 IST" duration-ms="5522" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_account_Registration -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testcases.Account_registration_test@3eb25e1a]" started-at="2025-09-19T13:17:16 IST" name="tearDown" finished-at="2025-09-19T13:17:16 IST" duration-ms="152" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- testcases.Account_registration_test -->
      <class name="testcases.Login_test">
        <test-method is-config="true" signature="setup(java.lang.String,java.lang.String)[pri:0, instance:testcases.Login_test@5bda8e08]" started-at="2025-09-19T13:17:16 IST" name="setup" finished-at="2025-09-19T13:17:18 IST" duration-ms="1915" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Linux]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verify_login()[pri:0, instance:testcases.Login_test@5bda8e08]" started-at="2025-09-19T13:17:18 IST" name="verify_login" finished-at="2025-09-19T13:17:21 IST" duration-ms="2721" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verify_login -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testcases.Login_test@5bda8e08]" started-at="2025-09-19T13:17:21 IST" name="tearDown" finished-at="2025-09-19T13:17:21 IST" duration-ms="100" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- testcases.Login_test -->
    </test> <!-- Linux-Chrome -->
    <test started-at="2025-09-19T13:17:23 IST" name="Linux-Firefox" finished-at="2025-09-19T13:18:15 IST" duration-ms="52358">
      <class name="testcases.Account_registration_test">
        <test-method is-config="true" signature="setup(java.lang.String,java.lang.String)[pri:0, instance:testcases.Account_registration_test@7dc0f706]" started-at="2025-09-19T13:17:23 IST" name="setup" finished-at="2025-09-19T13:17:29 IST" duration-ms="5922" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Linux]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="test_account_Registration()[pri:0, instance:testcases.Account_registration_test@7dc0f706]" started-at="2025-09-19T13:17:29 IST" name="test_account_Registration" finished-at="2025-09-19T13:17:34 IST" duration-ms="5458" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_account_Registration -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testcases.Account_registration_test@7dc0f706]" started-at="2025-09-19T13:17:34 IST" name="tearDown" finished-at="2025-09-19T13:17:36 IST" duration-ms="1413" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- testcases.Account_registration_test -->
      <class name="testcases.Login_DDT">
        <test-method is-config="true" signature="setup(java.lang.String,java.lang.String)[pri:0, instance:testcases.Login_DDT@43c1b556]" started-at="2025-09-19T13:17:44 IST" name="setup" finished-at="2025-09-19T13:17:49 IST" duration-ms="4929" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Linux]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verify_login_DDT(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:testcases.Login_DDT@43c1b556]" started-at="2025-09-19T13:17:53 IST" name="verify_login_DDT" data-provider="LoginData" finished-at="2025-09-19T13:17:56 IST" duration-ms="2814" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[nag1@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[nag@123]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Valid]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verify_login_DDT -->
        <test-method signature="verify_login_DDT(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:testcases.Login_DDT@43c1b556]" started-at="2025-09-19T13:17:56 IST" name="verify_login_DDT" data-provider="LoginData" finished-at="2025-09-19T13:17:58 IST" duration-ms="1971" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[lakshmi@yahoo.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Laxmi]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Invalid]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertTrue(Assert.java:57)
at org.testng.Assert.assertTrue(Assert.java:67)
at testcases.Login_DDT.verify_login_DDT(Login_DDT.java:58)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verify_login_DDT -->
        <test-method signature="verify_login_DDT(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:testcases.Login_DDT@43c1b556]" started-at="2025-09-19T13:17:58 IST" name="verify_login_DDT" data-provider="LoginData" finished-at="2025-09-19T13:18:00 IST" duration-ms="2134" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[laksh@yahoo.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Lakshmi]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Invalid]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertTrue(Assert.java:57)
at org.testng.Assert.assertTrue(Assert.java:67)
at testcases.Login_DDT.verify_login_DDT(Login_DDT.java:58)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verify_login_DDT -->
        <test-method signature="verify_login_DDT(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:testcases.Login_DDT@43c1b556]" started-at="2025-09-19T13:18:00 IST" name="verify_login_DDT" data-provider="LoginData" finished-at="2025-09-19T13:18:12 IST" duration-ms="11526" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[laks@yahoo.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[xyz]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Invalid]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verify_login_DDT -->
        <test-method signature="verify_login_DDT(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:testcases.Login_DDT@43c1b556]" started-at="2025-09-19T13:18:12 IST" name="verify_login_DDT" data-provider="LoginData" finished-at="2025-09-19T13:18:14 IST" duration-ms="2231" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[abc123@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[test@123]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Valid]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verify_login_DDT -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testcases.Login_DDT@43c1b556]" started-at="2025-09-19T13:18:14 IST" name="tearDown" finished-at="2025-09-19T13:18:15 IST" duration-ms="1578" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- testcases.Login_DDT -->
      <class name="testcases.Login_test">
        <test-method is-config="true" signature="setup(java.lang.String,java.lang.String)[pri:0, instance:testcases.Login_test@4009e306]" started-at="2025-09-19T13:17:36 IST" name="setup" finished-at="2025-09-19T13:17:41 IST" duration-ms="5141" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Linux]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verify_login()[pri:0, instance:testcases.Login_test@4009e306]" started-at="2025-09-19T13:17:41 IST" name="verify_login" finished-at="2025-09-19T13:17:43 IST" duration-ms="1867" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verify_login -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testcases.Login_test@4009e306]" started-at="2025-09-19T13:17:43 IST" name="tearDown" finished-at="2025-09-19T13:17:44 IST" duration-ms="1481" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- testcases.Login_test -->
    </test> <!-- Linux-Firefox -->
  </suite> <!-- Suite -->
</testng-results>
